10000000
1-60
-59/1000
-0.59^2
(-0.59)^2
v <- (c/(2*60))*((1/pi)*acos(g)))
g <- (1-59)/1000
c <- 2.99e10
l <- seq(58, 62, by = 0.1)
fsr <- 1/(c/(2*l))*1e7
plot(l, fsr)
g <- (1-59)/1000
v <- (c/(2*60))*((1/pi)*acos(g))
g <- (1-59)/100
v <- (c/(2*60))*((1/pi)*acos(g))
v <- 1/(c/(2*60))*((1/pi)*acos(g))
v <- (1/(c/(2*60))*((1/pi)*acos(g)))*1e7
v*(1:1000)*fsr[20]
v*(10000*50000)*fsr[20]
v*(10000:50000)*fsr[20]
v*(100000:500000)*fsr[20]
v*(400000:500000)*fsr[20]
v*(450000:500000)*fsr[20]
v*(400000:450000)*fsr[20]
v*(400000:430000)*fsr[20]
v*(400000:410000)*fsr[20]
v*(400000:400100)*fsr[20]
v*(375000:376000)*fsr[20]
v*(350000:351000)*fsr[20]
v*(360000:361000)*fsr[20]
v*(320000:363000)*fsr[20]
v*(362000:363000)*fsr[20]
(fsr/pi)*((1-0.9998)/sqrt(0.9998))
(fsr[20]/pi)*((1-0.9998)/sqrt(0.9998))
fsr <- (c/(2*l))
(fsr[20]/pi)*((1-0.9998)/sqrt(0.9998))
fsr <- c/120
(fsr/pi)*((1-0.9998)/sqrt(0.9998))
2.99/15864.03
2.99e8/15864.03
c <- 2.99e8
fsr <- c/120
(fsr/pi)*((1-0.9998)/sqrt(0.9998))
2.99e8/158.6403
fsr <- c/(0.6*0.6)
(fsr/pi)*((1-0.9998)/sqrt(0.9998))
c/(fsr/pi)*((1-0.9998)/sqrt(0.9998))
c/(fsr/pi)*((1-0.9998)/sqrt(0.9998))*1e9
(c/((fsr/pi)*((1-0.9998)/sqrt(0.9998))))*1e9
(c/((fsr/pi)*((1-0.9998)/sqrt(0.9998))))
(((fsr/pi)*((1-0.9998)/sqrt(0.9998))))
fsr <- 1/(c/(2*l))*1e7
fsr
c <- 2.99e10
fsr <- c/(60*60)
g <- (1-59)/100
v <- (1/(c/(2*60))*((1/pi)*acos(g)))*1e7
v*(362000:363000)*fsr[20]
c <- 2.99e10
l <- seq(58, 62, by = 0.1)
fsr <- 1/(c/(2*l))*1e7
plot(l, fsr)
fsr <- (c/(2*l))
plot(l, fsr)
c <- 2.99e8
l <- seq(0.58, 0.62, by = 0.01)
fsr <- (c/(2*l))
plot(l, fsr)
g <- (1-59)/100
v <- ((c/(2*60))*((1/pi)*acos(g)))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*1:10)
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*100:1000)
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(100:1000)
)
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(100:1000))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(1000))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(0.1))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(0.01))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(0.0001))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(0.000001))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(0.00000000000001))
((c/(2*60))*((1/pi)*acos(g)))+(2.5e8*(10))
((c/(2*60))*((1/pi)*acos(g)))+(2.5e8*(1))
((c/(2*60))*((1/pi)*acos(g)))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(1))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(1e-50))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(1))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(0.1))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(0.001))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(0.01))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(0.005))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(0.001))
1e-5
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(5e-5))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(5e-4))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(5e-3))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(5e-2))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(6e-3))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(8e-3))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(7e-3))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(6e-3))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(6.5e-3))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(6.9e-3))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(6.95e-3))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(6.91e-3))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*(6.92e-3))
((c/(2*60))*((1/pi)*acos(g)))-(2.5e8*1)
fsr <- (c/(2*0.6))
v <- (c/(2*0.6))*((1/pi)*acos(g))
v+fsr
v+2*fsr
v-2*fsr
v-1*fsr
fsr/1e4
30000000/2.99e8
30000000/2.99e8
*1e9
30000000/2.99e8*1e9
(fsr/pi)*((1-0.9998)/sqrt(0.9998))
(fsr/pi)*((1-0.9998)/sqrt(0.9998))
2.99e8/((fsr/pi)*((1-0.9998)/sqrt(0.9998)))
((fsr/pi)*((1-0.9998)/sqrt(0.9998)))/2.99e8
(((fsr/pi)*((1-0.9998)/sqrt(0.9998)))/2.99e8)*1e9
v <- (c/(2*0.6))*((1/pi)*acos(g))
fsr <- (c/(2*0.93))
plot(l, fsr)
v <- (c/(2*0.93))*((1/pi)*acos(g))
1/fsr
2.99e8/fsr
fsr/1e6
fsr/1e9
c/fsr
fsr
(fsr/pi)*((1-0.9998)/sqrt(0.9998))
2.99e8/((fsr/pi)*((1-0.9998)/sqrt(0.9998)))
(2.99e8/((fsr/pi)*((1-0.9998)/sqrt(0.9998))))/1e9
(2.99e8/((fsr/pi)*((1-0.9998)/sqrt(0.9998))))/1e-9
fsr/1e-9
1e-5
1e-5*0.5
1/1e-5
1e5/2
0.0/4000
0.5/4000
0.5/2000
2000/0.5
1/4000
fsr
0.5/0.00186493
c <- 2.99e8
fsr <- (c/(2*0.93))
g <- (1-0.93)/100
v <- (c/(2*0.93))*((1/pi)*acos(g))
(fsr/pi)*((1-0.9998)/sqrt(0.9998))
fsr2 <- (c/(2*0.6))
fsr/fsr2
0.53200005-0.5319993
(0.53200005-0.5319993)*1e9
(0.53200005-0.5319993)*1000
0.5/0.00075
dat <- read.csv("~/Documents/Electronics_Programming/bikePM/data/log/GPSLOG2015_0807P.TXT", stringsAsFactors=FALSE)
View(dat)
require(ggmap)
library(gridExtra)
base <- get_map('Milledge at Prince Avenue, Athens, GA', zoom = 14)
base <- ggmap(base, extent = 'panel')
pmMap <- base +
geom_path(aes(dat$lon, dat$lat, color = pm_raw), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
pm <- ggplot() + geom_line(aes(time, pm_raw, color = pm_raw), data = dat) +
theme_classic() + ylab('PM Response (% Full Scale)') +
scale_color_continuous(low = "forestgreen", high = "red")
vocMap <- base + geom_path(aes(dat$lon, dat$lat, color = voc), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
voc <- ggplot() + geom_line(aes(time, voc, color = voc), data = dat) +
theme_classic() + ylab('VOC Response (mV)') +
scale_color_continuous(low = "forestgreen", high = "red")
alt <- ggplot() + geom_line(aes(time, alt, color = pm_raw), data = dat) +
theme_classic()  + ylab('Altitude (m)') +
scale_color_continuous(low = "forestgreen", high = "red")
speed <- ggplot() + geom_line(aes(time, speed*1.15, color = pm_raw), data = dat) +
theme_classic() + ylab('Speed (mph)') +
scale_color_continuous(low = "forestgreen", high = "red")
grid.arrange(pmMap, vocMap, pm, voc, alt, speed, ncol = 2)
View(dat)
dat$time <- as.POSIXct(format(as.POSIXct(dat$time, tz = 'UTC'), tz = Sys.timezone()))
View(dat)
dat <- dat[10:nrow(dat)]
dat <- dat[10:nrow(dat), ]
dat$time <- as.POSIXct(format(as.POSIXct(dat$time, tz = 'UTC'), tz = Sys.timezone()))
View(dat)
voc
vocMap
vocMap
dat <- read.csv("C:/Users/al/Dropbox/bikePM/GPSLOG_20150806.TXT")
dat <- read.csv("~/Documents/Electronics_Programming/bikePM/data/log/GPSLOG2015_0807P.TXT", stringsAsFactors=FALSE)
View(dat)
dat <- read.csv("~/Documents/Electronics_Programming/bikePM/data/log/GPSLOG2015_0807P.TXT", stringsAsFactors=FALSE)
View(dat)
dat <- read.csv("~/Documents/Electronics_Programming/bikePM/data/log/GPSLOG_20150807P.TXT", stringsAsFactors=FALSE)
View(dat)
dat$time <- as.POSIXct(format(as.POSIXct(dat$time, tz = 'UTC'), tz = Sys.timezone()))
require(ggmap)
library(gridExtra)
base <- get_map('Milledge at Prince Avenue, Athens, GA', zoom = 14)
base <- ggmap(base, extent = 'panel')
pmMap <- base +
geom_path(aes(dat$lon, dat$lat, color = pm_raw), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
pm <- ggplot() + geom_line(aes(time, pm_raw, color = pm_raw), data = dat) +
theme_classic() + ylab('PM Response (% Full Scale)') +
scale_color_continuous(low = "forestgreen", high = "red")
vocMap <- base + geom_path(aes(dat$lon, dat$lat, color = voc), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
voc <- ggplot() + geom_line(aes(time, voc, color = voc), data = dat) +
theme_classic() + ylab('VOC Response (mV)') +
scale_color_continuous(low = "forestgreen", high = "red")
alt <- ggplot() + geom_line(aes(time, alt, color = pm_raw), data = dat) +
theme_classic()  + ylab('Altitude (m)') +
scale_color_continuous(low = "forestgreen", high = "red")
speed <- ggplot() + geom_line(aes(time, speed*1.15, color = pm_raw), data = dat) +
theme_classic() + ylab('Speed (mph)') +
scale_color_continuous(low = "forestgreen", high = "red")
grid.arrange(pmMap, vocMap, pm, voc, alt, speed, ncol = 2)
voc
grid.arrange(pmMap, vocMap, pm, voc, alt, speed, ncol = 2)
voc
vocMap
pmMap
pm
require(zoo)
plot(rollmean(dat$pm_raw, k = 10))
plot(rollmean(dat$pm_raw, k = 10), type = 'l')
dat$pm_rollavg <- c(rep(NA, times = 5), rollmean(dat$pm_raw, k = 10), rep(NA, times = 5))
dat$pm_rollavg <- c(rep(NA, times = 5), rollmean(dat$pm_raw, k = 10), rep(NA, times = 6))
dat$pm_rollavg <- c(rep(NA, times = 5), rollmean(dat$pm_raw, k = 10), rep(NA, times = 4))
require(ggmap)
library(gridExtra)
base <- get_map('Milledge at Prince Avenue, Athens, GA', zoom = 14)
base <- ggmap(base, extent = 'panel')
pmMap <- base +
geom_path(aes(dat$lon, dat$lat, color = pm_rollavg), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
pm <- ggplot() + geom_line(aes(time, pm_rollavg, color = pm_rollavg), data = dat) +
theme_classic() + ylab('PM Response (% Full Scale)') +
scale_color_continuous(low = "forestgreen", high = "red")
vocMap <- base + geom_path(aes(dat$lon, dat$lat, color = voc), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
voc <- ggplot() + geom_line(aes(time, voc, color = voc), data = dat) +
theme_classic() + ylab('VOC Response (mV)') +
scale_color_continuous(low = "forestgreen", high = "red")
alt <- ggplot() + geom_line(aes(time, alt, color = pm_rollavg), data = dat) +
theme_classic()  + ylab('Altitude (m)') +
scale_color_continuous(low = "forestgreen", high = "red")
speed <- ggplot() + geom_line(aes(time, speed*1.15, color = pm_rollavg), data = dat) +
theme_classic() + ylab('Speed (mph)') +
scale_color_continuous(low = "forestgreen", high = "red")
grid.arrange(pmMap, vocMap, pm, voc, alt, speed, ncol = 2)
dat <- subset(dat, time > as.POSIXct('2015-08-06 16:48:00'))
require(ggmap)
library(gridExtra)
base <- get_map('Milledge at Prince Avenue, Athens, GA', zoom = 14)
base <- ggmap(base, extent = 'panel')
pmMap <- base +
geom_path(aes(dat$lon, dat$lat, color = pm_rollavg), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
pm <- ggplot() + geom_line(aes(time, pm_rollavg, color = pm_rollavg), data = dat) +
theme_classic() + ylab('PM Response (% Full Scale)') +
scale_color_continuous(low = "forestgreen", high = "red")
vocMap <- base + geom_path(aes(dat$lon, dat$lat, color = voc), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
voc <- ggplot() + geom_line(aes(time, voc, color = voc), data = dat) +
theme_classic() + ylab('VOC Response (mV)') +
scale_color_continuous(low = "forestgreen", high = "red")
alt <- ggplot() + geom_line(aes(time, alt, color = pm_rollavg), data = dat) +
theme_classic()  + ylab('Altitude (m)') +
scale_color_continuous(low = "forestgreen", high = "red")
speed <- ggplot() + geom_line(aes(time, speed*1.15, color = pm_rollavg), data = dat) +
theme_classic() + ylab('Speed (mph)') +
scale_color_continuous(low = "forestgreen", high = "red")
grid.arrange(pmMap, vocMap, pm, voc, alt, speed, ncol = 2)
dat <- subset(dat, time > as.POSIXct('2015-08-07 16:48:00'))
require(ggmap)
library(gridExtra)
base <- get_map('Milledge at Prince Avenue, Athens, GA', zoom = 14)
base <- ggmap(base, extent = 'panel')
pmMap <- base +
geom_path(aes(dat$lon, dat$lat, color = pm_rollavg), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
pm <- ggplot() + geom_line(aes(time, pm_rollavg, color = pm_rollavg), data = dat) +
theme_classic() + ylab('PM Response (% Full Scale)') +
scale_color_continuous(low = "forestgreen", high = "red")
vocMap <- base + geom_path(aes(dat$lon, dat$lat, color = voc), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
voc <- ggplot() + geom_line(aes(time, voc, color = voc), data = dat) +
theme_classic() + ylab('VOC Response (mV)') +
scale_color_continuous(low = "forestgreen", high = "red")
alt <- ggplot() + geom_line(aes(time, alt, color = pm_rollavg), data = dat) +
theme_classic()  + ylab('Altitude (m)') +
scale_color_continuous(low = "forestgreen", high = "red")
speed <- ggplot() + geom_line(aes(time, speed*1.15, color = pm_rollavg), data = dat) +
theme_classic() + ylab('Speed (mph)') +
scale_color_continuous(low = "forestgreen", high = "red")
grid.arrange(pmMap, vocMap, pm, voc, alt, speed, ncol = 2)
dat <- subset(dat, time > as.POSIXct('2015-08-07 16:50:00'))
require(ggmap)
library(gridExtra)
base <- get_map('Milledge at Prince Avenue, Athens, GA', zoom = 14)
base <- ggmap(base, extent = 'panel')
pmMap <- base +
geom_path(aes(dat$lon, dat$lat, color = pm_rollavg), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
pm <- ggplot() + geom_line(aes(time, pm_rollavg, color = pm_rollavg), data = dat) +
theme_classic() + ylab('PM Response (% Full Scale)') +
scale_color_continuous(low = "forestgreen", high = "red")
vocMap <- base + geom_path(aes(dat$lon, dat$lat, color = voc), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
voc <- ggplot() + geom_line(aes(time, voc, color = voc), data = dat) +
theme_classic() + ylab('VOC Response (mV)') +
scale_color_continuous(low = "forestgreen", high = "red")
alt <- ggplot() + geom_line(aes(time, alt, color = pm_rollavg), data = dat) +
theme_classic()  + ylab('Altitude (m)') +
scale_color_continuous(low = "forestgreen", high = "red")
speed <- ggplot() + geom_line(aes(time, speed*1.15, color = pm_rollavg), data = dat) +
theme_classic() + ylab('Speed (mph)') +
scale_color_continuous(low = "forestgreen", high = "red")
grid.arrange(pmMap, vocMap, pm, voc, alt, speed, ncol = 2)
GPSLOG_20150811P <- read.csv("~/Documents/Electronics_Programming/bikePM/data/log/GPSLOG_20150811P.TXT")
View(GPSLOG_20150811P)
source('~/.active-rstudio-document')
install.packages("baseline")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
dat <- read.csv("~/Documents/Electronics_Programming/bikePM/data/log/GPSLOG_20150811P.TXT")
GPSLOG_20150811P <- read.csv("~/Documents/Electronics_Programming/bikePM/data/log/GPSLOG_20150811P.TXT")
rm(GPSLOG_20150811P)
dat$time <- as.POSIXct(format(as.POSIXct(dat$time, tz = 'UTC'), tz = Sys.timezone()))
dat <- subset(dat, time > as.POSIXct('2015-08-11 09:25:00'))
require(baseline)
dat$voc <- t(baseline.lowpass(matrix(dat$voc, nrow = 1))$corrected)
dat$voc <- dat$voc + abs(min(dat$voc))
dat$pm_filt <- t(baseline.lowpass(matrix(dat$pm_filt, nrow = 1))$corrected)
require(ggmap)
library(gridExtra)
base <- get_map('Milledge at Prince Avenue, Athens, GA', zoom = 14)
base <- ggmap(base, extent = 'panel')
pmMap <- base +
geom_path(aes(dat$lon, dat$lat, color = pm_filt), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
pm <- ggplot() + geom_line(aes(time, pm_filt, color = pm_filt), data = dat) +
theme_classic() + ylab('PM Response (% Full Scale)') +
scale_color_continuous(low = "forestgreen", high = "red")
vocMap <- base + geom_path(aes(dat$lon, dat$lat, color = voc), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
voc <- ggplot() + geom_line(aes(time, voc, color = voc), data = dat) +
theme_classic() + ylab('VOC Response (a.u.)') +
scale_color_continuous(low = "forestgreen", high = "red")
alt <- ggplot() + geom_line(aes(time, alt, color = pm_filt), data = dat) +
theme_classic()  + ylab('Altitude (m)') +
scale_color_continuous(low = "forestgreen", high = "red")
speed <- ggplot() + geom_line(aes(time, speed*1.15, color = pm_filt), data = dat) +
theme_classic() + ylab('Speed (mph)') +
scale_color_continuous(low = "forestgreen", high = "red")
grid.arrange(pmMap, vocMap, pm, voc, alt, speed, ncol = 2)
pmMap
vocMap
pm
voc
alt
speed
View(dat)
dat <- read.csv("~/Documents/Electronics_Programming/bikePM/data/log/GPSLOG_20150811P.TXT")
require(baseline)
dat$voc <- t(baseline.lowpass(matrix(dat$voc, nrow = 1))$corrected)
dat$voc <- dat$voc + abs(min(dat$voc))
dat$pm_filt <- t(baseline.lowpass(matrix(dat$pm_filt, nrow = 1))$corrected)
require(ggmap)
library(gridExtra)
base <- get_map('Milledge at Prince Avenue, Athens, GA', zoom = 14)
base <- ggmap(base, extent = 'panel')
pmMap <- base +
geom_path(aes(dat$lon, dat$lat, color = pm_filt), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
pm <- ggplot() + geom_line(aes(time, pm_filt, color = pm_filt), data = dat) +
theme_classic() + ylab('PM Response (% Full Scale)') +
scale_color_continuous(low = "forestgreen", high = "red")
vocMap <- base + geom_path(aes(dat$lon, dat$lat, color = voc), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
voc <- ggplot() + geom_line(aes(time, voc, color = voc), data = dat) +
theme_classic() + ylab('VOC Response (a.u.)') +
scale_color_continuous(low = "forestgreen", high = "red")
alt <- ggplot() + geom_line(aes(time, alt, color = pm_filt), data = dat) +
theme_classic()  + ylab('Altitude (m)') +
scale_color_continuous(low = "forestgreen", high = "red")
speed <- ggplot() + geom_line(aes(time, speed*1.15, color = pm_filt), data = dat) +
theme_classic() + ylab('Speed (mph)') +
scale_color_continuous(low = "forestgreen", high = "red")
grid.arrange(pmMap, vocMap, pm, voc, alt, speed, ncol = 2)
vocMap
pmMap
pm
alt
voc
dat <- read.csv("~/Documents/Electronics_Programming/bikePM/data/log/GPSLOG_20150811P.TXT", stringsAsFactors=FALSE)
View(dat)
dat <- read.csv("~/Documents/Electronics_Programming/bikePM/data/log/GPSLOG_20150811P.TXT", stringsAsFactors=FALSE)
dat$time <- as.POSIXct(format(as.POSIXct(dat$time, tz = 'UTC'), tz = Sys.timezone()))
source('~/.active-rstudio-document')
View(dat)
dat <- subset(dat, pm_raw != 'Inf')
View(dat)
source('~/.active-rstudio-document')
dat <- read.csv("~/Documents/Electronics_Programming/bikePM/data/log/GPSLOG_20150811P.TXT", stringsAsFactors=FALSE)
dat$time <- as.POSIXct(format(as.POSIXct(dat$time, tz = 'UTC'), tz = Sys.timezone()))
dat <- subset(dat, pm_raw != 'Inf')
require(baseline)
dat$voc <- t(baseline.lowpass(matrix(dat$voc, nrow = 1))$corrected)
dat$voc <- dat$voc + abs(min(dat$voc))
dat$pm_filt <- t(baseline.lowpass(matrix(dat$pm_filt, nrow = 1))$corrected)
require(ggmap)
library(gridExtra)
base <- get_map('Milledge at Prince Avenue, Athens, GA', zoom = 14)
base <- ggmap(base, extent = 'panel')
pmMap <- base +
geom_path(aes(dat$lon, dat$lat, color = pm_filt), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
pm <- ggplot() + geom_line(aes(time, pm_filt, color = pm_filt), data = dat) +
theme_classic() + ylab('PM Response (% Full Scale)') +
scale_color_continuous(low = "forestgreen", high = "red")
vocMap <- base + geom_path(aes(dat$lon, dat$lat, color = voc), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
voc <- ggplot() + geom_line(aes(time, voc, color = voc), data = dat) +
theme_classic() + ylab('VOC Response (a.u.)') +
scale_color_continuous(low = "forestgreen", high = "red")
alt <- ggplot() + geom_line(aes(time, alt, color = pm_filt), data = dat) +
theme_classic()  + ylab('Altitude (m)') +
scale_color_continuous(low = "forestgreen", high = "red")
speed <- ggplot() + geom_line(aes(time, speed*1.15, color = pm_filt), data = dat) +
theme_classic() + ylab('Speed (mph)') +
scale_color_continuous(low = "forestgreen", high = "red")
pmMap
vocMap
pm
voc
alt
speed
plot(dat$time, dat$speed)
plot(dat$time, dat$speed, type = 'l')
View(dat)
dat <- read.csv("~/Documents/Electronics_Programming/bikePM/data/log/GPSLOG_20150811P.TXT", stringsAsFactors=FALSE)
View(dat)
dat$time <- as.POSIXct(format(as.POSIXct(dat$time, tz = 'UTC'), tz = Sys.timezone()))
View(dat)
qplot(dat, time, speed)
class(dat$speed)
class(dat$time)
source('~/.active-rstudio-document')
dat <- read.csv("~/Documents/Electronics_Programming/bikePM/data/log/GPSLOG_20150811P.TXT", stringsAsFactors=FALSE)
dat$time <- as.POSIXct(format(as.POSIXct(dat$time, tz = 'UTC'), tz = Sys.timezone()))
dat <- subset(dat, pm_raw != 'Inf')
dat <- subset(dat, class(dat$time) != "POSIXct")
dat$voc <- t(baseline.lowpass(matrix(dat$voc, nrow = 1))$corrected)
dat$voc <- dat$voc + abs(min(dat$voc))
dat$pm_filt <- t(baseline.lowpass(matrix(dat$pm_filt, nrow = 1))$corrected)
View(dat)
base <- get_map('Milledge at Prince Avenue, Athens, GA', zoom = 14)
base <- ggmap(base, extent = 'panel')
pmMap <- base +
geom_path(aes(dat$lon, dat$lat, color = pm_filt), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
pm <- ggplot() + geom_line(aes(time, pm_filt, color = pm_filt), data = dat) +
theme_classic() + ylab('PM Response (% Full Scale)') +
scale_color_continuous(low = "forestgreen", high = "red")
vocMap <- base + geom_path(aes(dat$lon, dat$lat, color = voc), data = dat, lwd = 2) +
scale_color_continuous(low = "forestgreen", high = "red")
voc <- ggplot() + geom_line(aes(time, voc, color = voc), data = dat) +
theme_classic() + ylab('VOC Response (a.u.)') +
scale_color_continuous(low = "forestgreen", high = "red")
alt <- ggplot() + geom_line(aes(time, alt, color = pm_filt), data = dat) +
theme_classic()  + ylab('Altitude (m)') +
scale_color_continuous(low = "forestgreen", high = "red")
speed <- ggplot() + geom_line(aes(time, speed*1.15, color = pm_filt), data = dat) +
theme_classic() + ylab('Speed (mph)') +
scale_color_continuous(low = "forestgreen", high = "red")
pmMap
vocMap
?qplot
qplot(time, speed, data = dat)
ggplot() + geom_line(aes(time, speed*1.15, color = pm_filt), data = dat) +
theme_classic() + ylab('Speed (mph)') +
scale_color_continuous(low = "forestgreen", high = "red")
ggplot() + geom_line(aes(time, speed*1.15, color = pm_filt), data = dat) +
theme_classic() + ylab('Speed (mph)')
source('~/.active-rstudio-document')
View(dat)
i = 1
dat$pm_filt[i] <- dat$pm_raw
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
pmMap
vocMap
voc
source('~/.active-rstudio-document')
dat <- read.csv("~/Documents/Electronics_Programming/bikePM/data/log/GPSLOG_20150812P.TXT", stringsAsFactors=FALSE)
dat <- read.csv("~/Documents/Electronics_Programming/bams/data/log/GPSLOG_20150812P.TXT", stringsAsFactors=FALSE)
dat$time <- as.POSIXct(format(as.POSIXct(dat$time, tz = 'UTC'), tz = Sys.timezone()))
View(dat)
source('~/.active-rstudio-document')
vocMap
pmMap
setwd("~/Documents/Electronics_Programming/bams/data/log/")
